<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
<div class="main-checkout-container">

    <div class="my-cart-container">
        <h5>My Cart</h5>
        <hr />
        <div class="main-card">
            <div id="checkoutContainer" class="check-out-box">
            </div>
            <div>
                <p>Enter a promo code</p>
                <p>Add a note</p>
            </div>
        </div>
    </div>
    <div class="order-summary">
        <h5>Order Summary</h5>
        <hr />
        <div>
            <div class="order-summary-total">
                <p>Subtotal</p>
                <p id="subtotal1"></p>

            </div>
            <div class="order-summary-total">
                <p>Delivery </p>
                <p>FREE</p>

            </div>
            <div class="order-summary-total">
                <p>Location </p>
                <u> <a>Lagos, Nigeria</a> </u>

            </div>

        </div>
        <hr />
        <div class="order-summary-footer">
            <div class="order-summary-total">
                <p>Total</p>
                <p id="subtotal2"></p>

            </div>
            <div>
                <a data-bs-toggle="modal" data-bs-target="#exampleModal" class="check-out-btn">Checkout</a>
            </div>
        </div>
    </div>

</div>




<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Mode Of Payment</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                        <label class="form-check-label" for="flexRadioDefault1">
                            Pay on delivery
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" checked>
                        <label class="form-check-label" for="flexRadioDefault2">
                            Pay by card or transfer
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary send-payment-request">Save</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>







    $(document).ready(function () {
        setTimeout(function () {
            $.ajax({
                url: "/GetCartItems",
                type: "GET",
                success: function (datas) {
                    createCard(datas);
                    console.log("Success");
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching cart items:", error);
                    renderCartNull();
                }
            });
        }, 1000);
    });





    function createCard(dataCart) {

        var cartContainerbox = $("#checkoutContainer");
        cartContainerbox.empty();
        console.log("aaa");

        if (dataCart.length === 0) {
            cartContainerbox.append('<p>Your cart is empty.</p>');
            return;
        }

        var cardHtml = '<div class="checkout-card-container">';
        dataCart.forEach(function (item) {
            cardHtml += '<div class="checkout-card-details">';
            cardHtml += '<div class="checkout-content">';
            cardHtml += '<div class="checkout-imagecontainer">';
            cardHtml += '<img class="checkout-img" width="100" height="160" src="' + item.image + '" />';
            cardHtml += '</div>';
            cardHtml += '<div>';
            cardHtml += '<p class="card-product-name">' + item.name + '</p>';
            cardHtml += '<p class="card-product-price">₦' + item.price + '</p>';
            cardHtml += '<div class="count-container">';
            cardHtml += '<span class"decrementBtn faded">-</span>';
            cardHtml += '<span class="count .counter-container count-' + item.Id + '">' + item.quantity + '</span>';
            cardHtml += '<span class="incrementBtn">+</span>';
            cardHtml += '</div>';
            cardHtml += '</div>';
            cardHtml += '</div>';
            cardHtml += '</div>';
            cardHtml += '<div class="card-total-price">';
            cardHtml += '<span class="total-price count-' + item.Id + '">₦' + item.quantity * item.price + '</span>';
            cardHtml += '<span onclick="removeFromCart(this)" data-product-id="' + item.id + '" class="remove-card"> X</span>';
            cardHtml += '</div>';
            cardHtml += '<hr/>';
            cardHtml += '</div>';



        });
        cardHtml += '</div>';

        cartContainerbox.append(cardHtml);
        updateSubtotalsOnPage(dataCart);

    }

    function updateSubtotalsOnPage(dataCart) {
        var subtotalValue = calculateSubtotals(dataCart);
        document.getElementById('subtotal1').textContent = subtotalValue;
        document.getElementById('subtotal2').textContent = subtotalValue;
    }

    function calculateSubtotals(dataCart) {
        var subtotals = 0;
        dataCart.forEach(function (item) {
            subtotals += item.price * item.quantity;
        });

        return '₦' + subtotals.toFixed(2);
    }









    const exampleModal = document.getElementById('exampleModal');
    if (exampleModal) {
        exampleModal.addEventListener('show.bs.modal', event => {

            const saveButton = exampleModal.querySelector('.send-payment-request');
            saveButton.addEventListener('click', () => {
                const paymentMethodRadios = exampleModal.querySelectorAll('input[name="flexRadioDefault"]');
                let selectedMethod = null;

                paymentMethodRadios.forEach(radio => {
                    if (radio.checked) {
                        selectedMethod = radio.id;
                    }
                });
                
                const element = document.getElementById("subtotal2");

                const elementContent = element.innerHTML;

                const TotalAmount = elementContent.replace("₦", "");

                let IsPayOnDelivery = true;

                const deliveryUrl = `/NewOrder?totalAmount=${TotalAmount}&isPayOnDelivery=${IsPayOnDelivery}`;
                const url = `/NewOrder?totalAmount=${TotalAmount}`;

                if (selectedMethod === 'flexRadioDefault1') {

                    const payOnDeliveryData = {
                        TotalAmounti: TotalAmount,
                        IsPayOnDelivery: true
                    };

                    //fetch('/Order', {
                    //    method: 'POST',
                    //    headers: {
                    //        'Content-Type': 'application/json',
                    //    },
                    //    body: JSON.stringify(payOnDeliveryData),
                    //})
                    fetch(deliveryUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(TotalAmount),
                    })
                        .then(response => {
                            if (response.ok) {

                                window.location.href = response.url;
                            } else {

                                alert('Payment on delivery failed.');
                            }
                        })
                        //.then(response => response.json()) 
                        //.then(data => {
                        //    if (response.ok) {
                        //    //if (data.redirect) {
                        //        //window.location.href = data.redirect; 
                        //        window.location.href = response.url;
                        //    } else {
                        //        alert('Payment on delivery failed.');
                        //    }
                        //})
                        .catch(error => {
                            console.error('Pay on delivery AJAX error:', error);
                        });

                } else if (selectedMethod === 'flexRadioDefault2') {

                    const payByCardData = {
                        TotalAmounti: TotalAmount
                    }


                   
                    //fetch(url, {
                    //    method: 'POST',
                    //    headers: {
                    //        'Content-Type': 'application/json',
                    //    },
                    //    body: JSON.stringify(TotalAmount),
                    //})
                    //    .then(response => {
                    //        if (response.ok) {

                    //            window.location.href = response.url;
                    //        } else {

                    //            alert('Payment by card or transfer failed.');
                    //        }
                    //    })
                    //    .catch(error => {

                    //        console.error('Pay by card AJAX error:', error);
                    //    });
                    async function makePayment(url, TotalAmount) {
                        try {
                            const response = await fetch(url, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(TotalAmount),
                            });

                            if (response.ok) {
                                window.location.href = response.url;
                            } else {
                                alert('Payment by card or transfer failed.');
                            }
                        } catch (error) {
                            console.error('Pay by card AJAX error:', error);
                        }
                    }

                    // Usage example
                    //const paymentUrl = 'your_payment_url';
                    //const totalAmount = { amount: 100 }; // Replace with your data
                    makePayment(url, TotalAmount);

                }
            });
        });
    }
</script>



<style>
    .main-checkout-container {
        display: grid;
        grid-template-columns: 3fr 1fr;
        gap: 4rem;
        padding: 1rem 10rem;
        margin-top: 3rem;
    }

        .main-checkout-container h5 {
            font-weight: 700;
        }

    .checkout-imagecontainer {
        border: 1px solid #3335;
        margin-right: 1rem;
    }

    .main-checkout-container hr {
        border: 1px solid black;
    }

    .checkout-card-container {
        display: flex;
        justify-content: space-between;
        border-bottom: 1px solid #3339;
        padding-bottom: 1rem;
        margin-bottom: 1rem;
    }

    .checkout-content {
        display: flex;
    }

    .card-product-price {
        color: green;
    }

    .card-total-price, .order-summary-total {
        display: flex;
        justify-content: space-between;
    }

    .count-container {
        border: 1px solid black;
        width: fit-content;
        display: flex;
        justify-content: space-evenly;
        min-width: 4rem;
    }

        .count-container span {
            cursor: pointer;
        }

    .remove-card {
        text-decoration: none;
        color: red;
        cursor: pointer;
    }

    .check-out-btn {
        background-color: red;
        padding: 0.5rem 6.5rem;
        border-radius: 25px;
        color: white;
        text-decoration: none;
        font-weight: 600;
        cursor: pointer;
    }


    .faded {
        opacity: 0.5;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>

<script src="~/js/Products.js" asp-append-version="true"></script>
<script src="~/js/site.js"></script>